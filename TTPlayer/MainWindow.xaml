<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:Themes="assembly=PresentationFramework.Aero" xmlns:Themes1="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" x:Class="TTPlayer.MainWindow"
        x:Name="test"
        Title="MainWindow" Height="590.334" Width="805.333" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" WindowStyle="None" MinWidth="800" Foreground="{x:Null}" Closing="Window_Closing_1" MouseLeftButtonDown="test_MouseLeftButtonDown" KeyDown="KeyPress">
	<Window.Resources>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>



		<!-- MY STYLE -->
		

		<ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition />
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.RowSpan="2" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Width="8"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Height="8"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="4" />
								<ColumnDefinition Width="4" />
								<ColumnDefinition />
								<ColumnDefinition Width="4" />
								<ColumnDefinition Width="4" />
							</Grid.ColumnDefinitions>
							<Ellipse Grid.Column="0" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
							<Rectangle Grid.Column="1" Grid.ColumnSpan="3" Fill="#FFF4F4F5" />
							<Ellipse Grid.Column="3" Grid.ColumnSpan="2" Fill="#FFF4F4F5" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="4" />
								<RowDefinition Height="4" />
								<RowDefinition />
								<RowDefinition Height="4" />
								<RowDefinition Height="4" />
							</Grid.RowDefinitions>
							<Ellipse Grid.Row="0" Grid.RowSpan="2" Fill="#FFF4F4F5" />
							<Rectangle Grid.Row="1" Grid.RowSpan="3" Fill="#FFF4F4F5" />
							<Ellipse Grid.Row="3" Grid.RowSpan="2" Fill="#FFF4F4F5" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="10"/>
			<Setter Property="MinWidth" Value="10"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FBFBFBF">
							<Grid.RowDefinitions>
								<RowDefinition Height="0.00001*"/>
							</Grid.RowDefinitions>
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{DynamicResource VerticalThumb}"   Width="8" Background="Black"/>
								</Track.Thumb>
							</Track>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="10"/>
					<Setter Property="MinHeight" Value="10"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FA7A7A7">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0.00001*"/>
									</Grid.ColumnDefinitions>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb  Style="{DynamicResource HorizontalThumb}" Height="8"/>
										</Track.Thumb>
									</Track>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- END -->

		<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<!-- MY ADD -->
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>

			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#AFDEAC56"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FFFCFCFC"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#FF488DDE"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF488DDE"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="White"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#AFDEAC56"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="#AFDEAC56" BorderThickness="{TemplateBinding BorderThickness}" Padding="1">
							<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="false" Template="{DynamicResource ScrollViewerControlTemplate}" >
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource ItemsPresenterStyle1}"/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
			<GradientStop Color="#ABADB3" Offset="0.05"/>
			<GradientStop Color="#E2E3EA" Offset="0.07"/>
			<GradientStop Color="#E3E9EF" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="TextBoxStyle1" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF86B8F4"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="White"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#FF2AAAF2"/>
								</ColorAnimationUsingKeyFrames>
								<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.BorderThickness)">
									<SplineThicknessKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
								</ThicknessAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF2AAAF2"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF2AAAF2"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="White"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#AFDEAC56"/>
								</ColorAnimationUsingKeyFrames>
								<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(Border.BorderThickness)">
									<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
									<SplineThicknessKeyFrame KeyTime="00:00:00.5000000" Value="17,30,0,0"/>
									<SplineThicknessKeyFrame KeyTime="00:00:01" Value="0"/>
								</ThicknessAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF2AAAF2"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="White"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#AFDEAC56"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter">
								<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="LabelStyle1" TargetType="{x:Type Label}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Padding" Value="5"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Label}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#0.843137264, 1, 1, 1"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#FF488DDE"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF488DDE"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#0.843137264, 1, 1, 1"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#AFDEAC56"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="#AFDEAC56">
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Height="16"/>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Mouse.MouseLeave">
								<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
							</EventTrigger>
							<EventTrigger RoutedEvent="Mouse.MouseEnter">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2" SnapsToDevicePixels="true"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#F3F3F3" Offset="0"/>
			<GradientStop Color="#EBEBEB" Offset="0.5"/>
			<GradientStop Color="#DDDDDD" Offset="0.5"/>
			<GradientStop Color="#CDCDCD" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		<Style x:Key="ButtonStyleX" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#FFCD3C3C"/>
								</ColorAnimationUsingKeyFrames>
								<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Chrome" Storyboard.TargetProperty="(FrameworkElement.Margin)">
									<SplineThicknessKeyFrame KeyTime="00:00:01" Value="0"/>
								</ThicknessAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<ControlTemplate.Triggers>
							<Trigger Property="IsCancel" Value="False"/>
							
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid SnapsToDevicePixels="False" Background="Transparent">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="-90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
									<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid SnapsToDevicePixels="False" Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="180"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
									<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid SnapsToDevicePixels="False" Background="Transparent">
								<Grid.RowDefinitions>
									<RowDefinition Height="19"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<Grid>
									<Grid.LayoutTransform>
										<TransformGroup>
											<TransformGroup.Children>
												<TransformCollection>
													<RotateTransform Angle="90"/>
												</TransformCollection>
											</TransformGroup.Children>
										</TransformGroup>
									</Grid.LayoutTransform>
									<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
									<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
								</Grid>
								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderHeaderFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="0" SnapsToDevicePixels="true"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="{TemplateBinding Padding}">
							<Grid SnapsToDevicePixels="False" Background="Transparent">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="19"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
								<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
								<ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Expander}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="OnMouseEnter1">
								<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
									<SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.25"/>
									<SplineDoubleKeyFrame KeyTime="00:00:01" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Border x:Name="border" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="{x:Null}">
							<DockPanel x:Name="dockPanel" Background="{x:Null}">
								<ToggleButton x:Name="HeaderSite" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top"/>
								<ContentPresenter x:Name="ExpandSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
							</DockPanel>
						</Border>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="Expander.Expanded">
								<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
							</EventTrigger>
							<Trigger Property="IsExpanded" Value="true">
								<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Right">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Up">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
							</Trigger>
							<Trigger Property="ExpandDirection" Value="Left">
								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ItemsPresenterStyle1" TargetType="{x:Type ItemsPresenter}"/>
		<ControlTemplate x:Key="ScrollViewerControlTemplate1_" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" Style="{DynamicResource ScrollContentPresenterStyle1}"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		</ControlTemplate>
		<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
		<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}"/>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}"/>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		
		<Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition Height="0.00001*"/>
								<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							</Grid.RowDefinitions>
							<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}" Template="{DynamicResource RepeatButtonControlTemplate1}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumb}"  Template="{DynamicResource ThumbControlTemplate2}" Height="Auto" Width="Auto"/>
								</Track.Thumb>
							</Track>
							<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="0.00001*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" />
										</Track.Thumb>
									</Track>
									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" />
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ScrollContentPresenterStyle1" TargetType="{x:Type ScrollContentPresenter}"/>
		<ControlTemplate x:Key="RepeatButtonControlTemplate1" TargetType="{x:Type RepeatButton}">
			<Rectangle Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates"/>
					<VisualStateGroup x:Name="FocusStates"/>
					<VisualStateGroup x:Name="ValidationStates"/>
				</VisualStateManager.VisualStateGroups>
			</Rectangle>
		</ControlTemplate>
		<ControlTemplate x:Key="ThumbControlTemplate2" TargetType="{x:Type Thumb}">
			<Rectangle Height="{TemplateBinding Height}" Width="2.875" RadiusX="3" RadiusY="3" Fill="Black">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="MouseOver"/>
						<VisualState x:Name="Pressed"/>
						<VisualState x:Name="Disabled"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="FocusStates">
						<VisualState x:Name="Unfocused"/>
					</VisualStateGroup>
					<VisualStateGroup x:Name="ValidationStates">
						<VisualState x:Name="InvalidFocused"/>
						<VisualState x:Name="InvalidUnfocused"/>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
			</Rectangle>
		</ControlTemplate>
		<ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="RectangleStyle1" TargetType="{x:Type Rectangle}">
			<Style.Resources>
				<Storyboard x:Key="OnMouseEnter1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#0.843137264, 1, 1, 1"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#FF488DDE"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="OnMouseLeave1">
								<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="{x:Null}" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
									<SplineColorKeyFrame KeyTime="00:00:00" Value="#FF488DDE"/>
									<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#0.843137264, 1, 1, 1"/>
									<SplineColorKeyFrame KeyTime="00:00:01" Value="#AFDEAC56"/>
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
			</Style.Resources>
			<Style.Triggers>
				<EventTrigger RoutedEvent="Mouse.MouseEnter">
					<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter1}"/>
				</EventTrigger>
				<EventTrigger RoutedEvent="Mouse.MouseLeave">
					<BeginStoryboard x:Name="OnMouseLeave1_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave1}"/>
				</EventTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="RoundCorner" TargetType="{x:Type Button}">

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                <Grid x:Name="grid">
                    <Border x:Name="border" CornerRadius="20" BorderBrush="#FF7BC4F0" BorderThickness="1" HorizontalAlignment="Left" Width="124.667">
                        <Border.Background>
                         <RadialGradientBrush GradientOrigin="0.496,1.052">
                            <RadialGradientBrush.RelativeTransform>
                              <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                   ScaleX="1.5" ScaleY="1.5"/>
                                <TranslateTransform X="0.02" Y="0.3"/>
                              </TransformGroup>
                            </RadialGradientBrush.RelativeTransform>
                            <GradientStop Offset="1" Color="#00000000"/>
                            <GradientStop Offset="0.3"/>
                          </RadialGradientBrush>
                        </Border.Background>
                        <ContentPresenter HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         TextElement.FontWeight="Bold"/>
                    </Border>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsPressed" Value="True">
                        	<Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF33962B"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
		<Style x:Key="ButtonFocusVisual2">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyle1_" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Themes1:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RenderDefaulted="{TemplateBinding IsDefaulted}" SnapsToDevicePixels="true">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Themes1:ButtonChrome>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="RenderDefaulted" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="ToggleButton.IsChecked" Value="true">
								<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Window.Background>
		<ImageBrush ImageSource="Sfondo.png"/>
	</Window.Background>
	<Grid x:Name="LayoutRoot" VerticalAlignment="Top" Height="602" Margin="0,-1,0,0" KeyDown="KeyPress">
		<TextBlock x:Name="TT_Team___Work__" FontFamily="Myriad Pro" FontSize="18" Foreground="#FF000000" IsHyphenationEnabled="True" LineHeight="18" LineStackingStrategy="BlockLineHeight" Text="TT Team @ Work !" TextAlignment="Left" TextWrapping="Wrap" RenderTransformOrigin="0.5,0.5" Margin="656.293,55.333,3.667,526.607">
			<TextBlock.RenderTransform>
				<TransformGroup>
					<ScaleTransform ScaleX="0.807" ScaleY="0.807"/>
					<SkewTransform/>
					<RotateTransform Angle="37.278"/>
					<TranslateTransform X="-12.462975" Y="-1.7369999999999992"/>
				</TransformGroup>
			</TextBlock.RenderTransform>
		</TextBlock>
        <Label x:Name="Lbl_time" Content="" Height="24" ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderThickness="1"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Bottom" Margin="309,0,309,15" Style="{DynamicResource LabelStyle1}" BorderBrush="#AFDEAC56" Background="{x:Null}" />
		<Slider x:Name="Slider_Search" Height="27" Style="{DynamicResource TTSlider}" Margin="22,0,0,45.667" VerticalAlignment="Bottom" IsMoveToPointEnabled="True" HorizontalAlignment="Left" Width="762.689" ValueChanged="Slider_Search_ValueChanged" />
		<Slider x:Name="Slider_vol" Height="25" Style="{DynamicResource TTSlider}" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="608,0,20.644,15" VerticalAlignment="Bottom" IsMoveToPointEnabled="True" ValueChanged="Slider_vol_ValueChanged"/>
        <ListView x:Name="Lst_song" ItemsSource="{Binding _QueueManager}" HorizontalAlignment="Left" Margin="0,29,0,87" Style="{DynamicResource ListBoxStyle1}" Width="230" Background="{x:Null}" BorderBrush="#AFDEAC56" BorderThickness="0,1,1,1" AllowDrop="True" MouseDoubleClick="Lst_song_MouseDoubleClick" Drop="Lst_song_Drop" KeyDown="KeyPress" PreviewKeyDown="KeyPress">
            <ListView.View>
                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="10" Height="12" Source="{Binding isPlayImage}"  />
                                    <TextBlock Width="190" Text="{Binding Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <Button x:Name="btn_icon" HorizontalAlignment="Left" Margin="737,10,0,0" VerticalAlignment="Top" Width="21" Height="21" Content="_" FontWeight="Bold" FontStretch="Condensed" Click="btn_icon_Click">
			<Button.Background>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFF3F3F3" Offset="0"/>
					<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
					<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
					<GradientStop Color="#FF1B91C7" Offset="1"/>
				</LinearGradientBrush>
			</Button.Background>
		</Button>
        <Label x:Name="Lbl_info" Height="24" Content="" Style="{DynamicResource LabelStyle1}" BorderBrush="#AFDEAC56" Background="{x:Null}"  ScrollViewer.VerticalScrollBarVisibility="Disabled" BorderThickness="1" 
        	 HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Bottom" Margin="22,0,575.333,15" Padding="5,3,5,5"  />
		<Button x:Name="btn_exit" HorizontalAlignment="Left" Margin="768,10,0,0" VerticalAlignment="Top" Width="21" Height="21" Content="X" FontStretch="Condensed" Click="btn_exit_Click" >
			<Button.Background>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFF3F3F3" Offset="0"/>
					<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
					<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
					<GradientStop Color="#FFD64F4F" Offset="1"/>
				</LinearGradientBrush>
			</Button.Background>
		</Button>
        <Label HorizontalAlignment="Right" Margin="0,0,118,77.667" x:Name="lbl_pp" Width="40" Height="25" VerticalAlignment="Bottom" FontSize="10" Content="Play"/>
        <Button x:Name="btnPrev" Height="53" Margin="592.666,435,166.334,0" VerticalAlignment="Top" Background="{x:Null}" Click="btnPrev_Click">
        	<Image x:Name="t_prew" Width="35" Source="img/prew.png" HorizontalAlignment="Left" Height="47" />
        </Button>
        <Button x:Name="btnNext" Height="53" Margin="738.356,435,20.644,0" VerticalAlignment="Top" Background="{x:Null}" Click="btnNext_Click" Style="{DynamicResource ButtonStyle1_}">
        	<Image HorizontalAlignment="Left" x:Name="next_t" Source="img/next.png" Width="32" Height="44" />
        </Button>
        <Button x:Name="btnPlayPause" Height="53" Margin="665,435,94,0" VerticalAlignment="Top" Background="{x:Null}" Click="btnPlayPause_Click">
        	<Image HorizontalAlignment="Left" x:Name="play" Source="img/pausa.png" Width="35" Height="47" />
        </Button>
        <Grid x:Name="Effetti" HorizontalAlignment="Right" Margin="0,249.333,18.334,233.507" Width="193.333">
        	<GroupBox Margin="4,0,0,0" Header="Effetti" VerticalAlignment="Top" Height="97.333" BorderBrush="#FF7BC4F0" Foreground="#FF0B6AB7" HorizontalAlignment="Left" Width="189.333">
        		<Grid HorizontalAlignment="Left" Height="115.915" Margin="0,-10.953,-2,-12.96" VerticalAlignment="Top" Width="243">
        			<CheckBox Margin="1.001,13.955,0,0" Width="79" x:Name="CkLowPass" Content="LowPass" HorizontalAlignment="Left" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkLowPass_Click" />
        			<CheckBox Margin="1.001,70.955,0,0" Width="79" x:Name="CkTremolo" Content="Tremolo" HorizontalAlignment="Left" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkTremolo_Click" />
        			<CheckBox Margin="1.001,51.955,0,0" Width="79" x:Name="CkDelay" Content="Delay" HorizontalAlignment="Left" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkDelay_Click" />
        			<CheckBox Margin="1.001,32.955,0,0" Width="79" x:Name="CkCoro" Content="Chorus" HorizontalAlignment="Left" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkCoro_Click" />
        			<CheckBox Margin="0,13.955,66.701,0" Width="82" x:Name="CkHighPass" Content="HighPass" HorizontalAlignment="Right" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkHighPass_Click" />
        			<CheckBox Margin="0,51.955,66.701,0" Width="82" x:Name="CkFlange" Content="Flange" HorizontalAlignment="Right" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkFlange_Click" />
        			<CheckBox Margin="0,32.955,66.701,0" Width="82" x:Name="CkDisorsione" Content="Distorsione" HorizontalAlignment="Right" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkDisorsione_Click" />
        			<CheckBox Margin="0,70.955,66.701,0" Width="82" x:Name="CkEcho" Content="Echo" HorizontalAlignment="Right" VerticalAlignment="Top" Height="19" FontWeight="Bold" Click="CkEcho_Click" />
        		</Grid>
        	</GroupBox>
        	<Grid x:Name="___Grid_Hidden_" HorizontalAlignment="Left" Height="13.333" Margin="227.333,84,0,0" VerticalAlignment="Top" Width="8" Opacity="0">
        		<Label x:Name="lbl_usbBounceTime" Margin="147,119.917,-247,-136.084" Content="Bounce Time Usb" FontWeight="Bold" Height="29.5" VerticalAlignment="Top">
        			<Label.Foreground>
        				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        					<LinearGradientBrush.RelativeTransform>
        						<TransformGroup>
        							<ScaleTransform CenterX="0.5" CenterY="0.5"/>
        							<SkewTransform CenterX="0.5" CenterY="0.5"/>
        							<RotateTransform Angle="45" CenterX="0.5" CenterY="0.5"/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</LinearGradientBrush.RelativeTransform>
        					<GradientStop Color="#FFDB7320" Offset="0"/>
        					<GradientStop Color="#FFD528A0" Offset="1"/>
        				</LinearGradientBrush>
        			</Label.Foreground>
        		</Label>
        		<Slider x:Name="slider_UsbBouncetime" Margin="18,120.955,-135,-136.084" Style="{DynamicResource TTSlider}" Height="28.462" VerticalAlignment="Top"/>
        		<Slider x:Name="slider_HotKeyBouncetime" Margin="18,149.122,-135,-159.751" Style="{DynamicResource TTSlider}" VerticalAlignment="Top" Height="23.962"/>
        		<Label x:Name="lbl_usbBounceTime_Copy" HorizontalAlignment="Right" Margin="0,146.083,-241.999,-157.75" Width="94.666" Content="HotKey Timer" FontWeight="Bold" VerticalAlignment="Top" Height="25">
        			<Label.Foreground>
        				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        					<LinearGradientBrush.RelativeTransform>
        						<TransformGroup>
        							<ScaleTransform CenterX="0.5" CenterY="0.5"/>
        							<SkewTransform CenterX="0.5" CenterY="0.5"/>
        							<RotateTransform CenterX="0.5" CenterY="0.5"/>
        							<TranslateTransform/>
        						</TransformGroup>
        					</LinearGradientBrush.RelativeTransform>
        					<GradientStop Color="#FF8ABAE2" Offset="0"/>
        					<GradientStop Color="#FF1D6AA9" Offset="1"/>
        				</LinearGradientBrush>
        			</Label.Foreground>
        		</Label>
        	</Grid>
        </Grid>
        <Grid x:Name="InfoGrid" HorizontalAlignment="Left" Height="0" Margin="22,563,0,0" VerticalAlignment="Top" Width="0">
        	<Rectangle VerticalAlignment="Bottom" Height="24"  Stroke="#AFDEAC56" Width="187.333" Style="{DynamicResource RectangleStyle1}"/>
        </Grid>
        <Button x:Name="btnRnd" Height="43" Margin="665,385,94,0" VerticalAlignment="Top" Background="{x:Null}" Click="btnRnd_Click">
        	<Image HorizontalAlignment="Left" x:Name="rndImg" Source="img/media-shuffle.png" Width="35" Height="47" />
        </Button>
    </Grid>
</Window>